-- users
drop table if exists users cascade;
create table users(
  user_id serial primary key
  , name character varying(100) not null unique
  , email character varying(100) not null unique
  , password text not null
  , image_path text
  , profile character varying(100) not null default 'こんにちは。よろしくお願いします。'
  , status integer not null default 0
  , update_password_date timestamp not null
);

-- category
drop table if exists category cascade;
create table category (
  category_id serial primary key
  , name character varying(100) not null
);

insert into category values(1, '文学・小説');
insert into category values(2, '社会・ビジネス');
insert into category values(3, '実用・教育');
insert into category values(4, '旅行・地図');
insert into category values(5, '趣味');
insert into category values(6, 'アート・教養・エンタメ');
insert into category values(7, '事典・図鑑・語学・辞書');
insert into category values(8, 'こども');
insert into category values(9, 'その他');

-- books
drop table if exists books cascade;
create table books (
  book_id serial primary key
  , isbn_id text not null
  , title text not null
  , author text not null
  , published_date character varying(10) not null
  , description text  not null
  , page_count text not null
  , thumbnail_path text not null
);

-- owned_book_info
drop table if exists book_owners cascade;
drop table if exists owned_book_info cascade;
create table owned_book_info(
  owned_book_info_id serial primary key
   , user_id integer not null references users(user_id)
   , book_id integer not null references books(book_id)
   , category_id integer not null references category(category_id)
   , book_status integer not null
   , comment text
   , version integer not null default 0
);

-- book_rentals
drop table if exists book_rentals cascade;
create table book_rentals(
  book_rental_id serial primary key
  , owned_book_info_id integer not null references owned_book_info(owned_book_info_id)
  , borrow_user_id integer not null references users(user_id)
  , rental_status integer not null
  , request_deadline date
  , deadline date
  , approval_date timestamp
  , creation_date timestamp
  , creation_user text
  , update_date timestamp
  , update_user text
  , version integer not null default 0
);


-- groups
drop table if exists groups cascade;
create table groups (
  group_id serial primary key
  , name character varying(100) not null
  , description text
  , owner_user_id integer
  , group_status integer not null
);


-- group_relations
drop table if exists group_relations cascade;
create table group_relations (
  group_relation_id serial primary key
  , user_id integer not null references users(user_id)
  , group_id integer not null references groups(group_id)
  , relation_status integer not null 
);